#!/usr/bin/python
# coding: utf-8
import os
import os.path
import subprocess

base = '/host'

def umount(volume):
    subprocess.check_call('umount -l %s' % volume, shell=True)

def mount_points():
    with open('/proc/self/mountinfo', 'r') as f:
    mounts = f.read().decode('utf-8')

    points = set()
    for line in mounts.split('\n'):
        mtab = line.split()
        if len(mtab) > 1 and mtab[4].startswith(base + '/') and mtab[4].endswith('shm') and 'containers' in mtab[4]:
            points.add(mtab[4])
    return points

def cleanup():
    umounts = mount_points()
    for volume in sorted(umounts, reverse=True):
        umount(volume)

def run():
    tpl_config = "/usr/share/filebeat/point/filebeat.tpl"
    os.execve('/usr/share/filebeat/point/point', ['/usr/share/filebeat/point/point', '-template', tpl_config, '-base', base, '-log-level', 'debug'],
              os.environ)

def config():
    subprocess.check_call(['/usr/share/filebeat/point/config.filebeat'])

if __name__ == '__main__':
    config()
    cleanup()
    run()