apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: watchlog
    kubernetes.io/cluster-service: "true"
  name: watchlog
  namespace: kube-system

spec:
  selector:
    matchLabels:
      k8s-app: watchlog

  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: watchlog
        kubernetes.io/cluster-service: "true"

    spec:
      containers:
        - env:
            # RUNTIME_TYPE 容器运行时类型, 支持 Docker、Containerd
            - name: RUNTIME_TYPE
              value: docker
            - name: LOGGING_OUTPUT
              value: elasticsearch
            - name: ELASTICSEARCH_HOST
              value: "192.168.1.190"
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          image: docker.io/cairry/watchlog:latest
          imagePullPolicy: Always
          name: watchlog

          resources:
            limits:
              cpu: "1"
              memory: 1000Mi
            requests:
              cpu: 50m
              memory: 100Mi

          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_ADMIN

          volumeMounts:
            - mountPath: /var/run/containerd/containerd.sock
              name: containersock
            - mountPath: /var/run/docker.sock
              name: sock
            - mountPath: /host
              name: root
              readOnly: true
            - mountPath: /var/lib/filebeat
              name: varlib
            - mountPath: /var/log/filebeat
              name: varlog

      restartPolicy: Always

      tolerations:
        - effect: NoSchedule
          operator: Exists

      volumes:
        - hostPath:
            path: /run/k3s/containerd/containerd.sock
            type: ""
          name: containersock
        - hostPath:
            path: /var/run/docker.sock
            type: ""
          name: sock
        - hostPath:
            path: /
            type: ""
          name: root
        - hostPath:
            path: /var/lib/filebeat
            type: DirectoryOrCreate
          name: varlib
        - hostPath:
            path: /var/log/filebeat
            type: DirectoryOrCreate
          name: varlog